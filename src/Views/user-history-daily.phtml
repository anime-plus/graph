<div class="section history-daily">
	<h2>
		Recent history
	</h2>
	<div class="section-body">
		<ul class="infobox">
			<li class="total-eps">
				<div>
					<span class="prefix">Last 3 weeks</span>
					<span class="subject">?</span>
					<span class="suffix">
						<?php echo TextHelper::getMediaUnitText($viewContext->media, true) ?>
					</span>
				</div>
			</li>
			<li class="different-titles">
				<div>
					<span class="prefix">Different titles</span>
					<span class="subject">?</span>
				</div>
			</li>
		</ul>

		<div class="target-wrapper">
			<div class="target"></div>
			<div class="clear"></div>
		</div>

		<div class="entries-wrapper">
			<?php foreach ($viewContext->dailyHistoryGroups as $date => $entries): ?>
				<div class="entries-sub-wrapper" id="date-<?php echo $date ?>">
					<p>
						<a class="close"><i class="icon-close"></i></a>
						<?php echo ucfirst(TextHelper::getMediaUnitText($viewContext->media, true)) ?> from <span class="days-ago">?</span> days ago: (<?php echo count($entries) ?>)
					</p>
					<?php if ($viewContext->isPrivate): ?>
						<p>Can&rsquo;t show you titles from a private list.</p>
					<?php elseif (empty($entries)): ?>
						<p>None!</p>
					<?php else: ?>
						<ul>
							<?php foreach ($entries as $entry): ?>
								<li>
									<a target="_blank" href="<?php echo $entry->mal_link ?>" rel="noreferrer">
										<?php echo htmlspecialchars($entry->title) ?>
									</a>
									<span class="details">
										&nbsp;(<?php echo $entry->progress ?>
										&nbsp;&ndash; <?php echo date('M jS, H:i', strtotime($entry->timestamp)) ?>)
									</span>
								</li>
							<?php endforeach ?>
						</ul>
					<?php endif ?>
				</div>
			<?php endforeach ?>
		</div>

		<script type="text/javascript">
			var dailyHistoryGroups = <?php echo json_encode($viewContext->dailyHistoryGroups) ?>;

			/* preprocess data */
			var dayPeriods = {};
			var oneDay = 1000 * 60 * 60 * 24;
			for (var groupDate in dailyHistoryGroups)
			{
				var date1 = new Date();
				var tmp = groupDate.split(/[^0-9]/);
				var date2 = new Date(tmp[0],tmp[1]-1,tmp[2]);
				var key = Math.round((date1.getTime() - date2.getTime()) / oneDay);
				if (key > 21 || key < 1)
				{
					continue;
				}
				dayPeriods[key] =
				{
					key: groupDate,
					entries: dailyHistoryGroups[groupDate]
				};
			}

			for (var i = 1; i <= 21; i ++)
			{
				if (typeof dayPeriods[i] == 'undefined')
				{
					dayPeriods[i] =
					{
						key: null,
						entries: []
					};
				}
			}

			var keys = Object.keys(dayPeriods);
			keys.sort(function(a, b) { return b - a; });
			var values = [];
			var dates = [];
			for (var i in keys)
			{
				var key = keys[i];
				var period = dayPeriods[key];
				dates.push(period.key);
				values.push(period.entries);
			}


			/* count different titles and total episodes */
			var differentTitles = {};
			var differentTitlesCount = 0;
			var totalEpisodeCount = 0;
			for (var i in values)
			{
				for (var j in values[i])
				{
					var key = values[i][j]['media'] + values[i][j]['mal_id'];
					if (!(key in differentTitles))
					{
						differentTitles[key] = true;
						differentTitlesCount ++;
					}
					totalEpisodeCount ++;
				}
			}
			$('.different-titles .subject').text(differentTitlesCount);
			$('.total-eps .subject').text(totalEpisodeCount);

			var missingDays = Math.floor((new Date() - getProcessedDate()) / oneDay);


			var opt =
			{
				chart:
				{
					renderTo: $('.history-daily .target')[0],
					type: 'column',
					marginTop: 8
				},

				xAxis:
				{
					categories: keys,
					title:
					{
						text: 'Days ago',
						margin: 15
					},
					labels:
					{
						style:
						{
							fontSize: '10px !important'
						}
					},
					plotBands:
					[
						{
							from: 6.5,
							to: 6.5 + 7,
							zIndex: 3,
							color: 'rgba(200, 230, 255, 0.2)'
						},
						{
							from: 21 - 0.5,
							to: 21 - 0.5 - missingDays,
							zIndex: 3,
							color: 'rgba(255, 200, 200, 0.2)'
						}
					]
				},

				yAxis:
				{
					title:
					{
						text: '<?php echo ucfirst(TextHelper::getMediaUnitText($viewContext->media, false)) ?> count'
					},
					min: 0,
					allowDecimals: false
				},

				tooltip:
				{
					formatter: function()
					{
						var text = '<?php echo ucfirst(TextHelper::getMediaUnitText($viewContext->media, true)) ?> completed ';
						if (this.x == 0)
						{
							text += 'today';
						}
						else if (this.x == 1)
						{
							text += 'yesterday';
						}
						else
						{
							text += this.x + ' days ago';
						}
						text += ': ' + this.y;
						return text;
					}
				},

				series:
				[
					{
						data: $.map(values, function(a, index)
						{
							var ret =
							{
								name: keys[index],
								groupDate: dates[index],
								y: a.length
							};
							return ret;
						}),
						point:
						{
							events:
							{
								click: function(e)
								{
									var groupDate = this.groupDate;
									var daysAgo = this.name;
									toggleEntries($('.history-daily .entries-wrapper'), {'sender': 'daily-history', 'filter-param': groupDate}, false, function()
									{
										$('.history-daily .entries-wrapper .entries-sub-wrapper').hide();
										$('.history-daily .entries-wrapper #date-' + groupDate).show();
										$('.history-daily .entries-wrapper #date-' + groupDate + ' .days-ago').text(daysAgo);
									});
								}
							}
						}
					}
				],

				plotOptions:
				{
					column:
					{
						pointWidth: 17
					}
				}
			};

			new Highcharts.Chart(opt);
		</script>
	</div>
</div>
